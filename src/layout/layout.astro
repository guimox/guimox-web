---
import { ClientRouter } from 'astro:transitions'
import Header from '../components/section/header.astro'
import Footer from '../components/section/footer.astro'

import '../styles/code.css'
import '../styles/reset.css'
import '../styles/mansory.css'

export interface Props {
  title: string
  description: string
  canonical?: string
  current: string
}

const { current, title, description, canonical } = Astro.props
const isError = current == '404'
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#0000" media="(prefers-color-scheme: dark)" />
    <link rel="canonical" href={canonical} />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />

    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />

    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon-32x32-dark.png"
      media="(prefers-color-scheme: dark)"
    />

    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon-16x16-dark.png"
      media="(prefers-color-scheme: dark)"
    />

    <ClientRouter />
    <title>{title}</title>
  </head>
  <body
    class="mx-auto flex min-h-screen max-w-[800px] flex-col px-4 pt-12 text-zinc-700 antialiased transition-all duration-300 sm:pt-14 dark:bg-black dark:text-white"
  >
    {!isError && <Header current={current} />}
    <main class="mt-4 flex flex-grow flex-col items-start justify-start gap-12 py-6">
      <slot />
    </main>
    {!isError && <Footer />}

    <script is:inline>
      function applyTheme() {
        const theme = (() => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme')
          }
          if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            return 'dark'
          }
          return 'light'
        })()

        if (theme === 'dark') {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }

        window.localStorage.setItem('theme', theme)
      }

      applyTheme()

      window.addEventListener('storage', (e) => {
        if (e.key === 'theme') {
          applyTheme()
        }
      })

      document.addEventListener('astro:after-swap', applyTheme)
    </script>
  </body>
</html>
