---
import { Icon } from 'astro-icon/components'

const { current } = Astro.props
const styleActive = 'font-bold text-zinc-700'
---

<style>
  .dropdown-content {
    @apply absolute right-0 mt-2 hidden w-40 rounded bg-[#f2f2f2] shadow-lg;
  }

  .dropdown-content.show {
    @apply block;
  }
</style>

<nav class="relative flex justify-between pt-5">
  <ul class="flex gap-4 text-base tracking-tight md:text-lg">
    <li class={`hover:opacity-75 ${current == 'home' ? styleActive : ''}`}>
      <a href="/"> Home</a>
    </li>
    <li class={`hover:opacity-75 ${current == 'about' ? styleActive : ''}`}>
      <a href="/about">About</a>
    </li>
    <li class={`hover:opacity-75 ${current == 'blog' ? styleActive : ''}`}>
      <a href="/blog">Blog</a>
    </li>
  </ul>
  <div class="relative">
    <button id="dropdownBtn">
      <Icon
        name="mdi:content-save"
        class={`rounded-full ${current == 'gallery' ? 'bg-zinc-700' : 'bg-gray-100'} p-1 text-2xl ${current === 'gallery' ? 'text-white' : 'text-zinc-700'}`}
      />
    </button>
    <div id="dropdownMenu" class="dropdown-content">
      <a href="/gallery/test1" class="block px-4 py-2 hover:bg-zinc-100">Gallery</a>
    </div>
  </div>
</nav>

<script>
  function initDropdown() {
    const btn = document.getElementById('dropdownBtn')
    const menu = document.getElementById('dropdownMenu')
    if (!btn || !menu || !btn.parentNode) return

    const newBtn = btn.cloneNode(true)
    btn.parentNode.replaceChild(newBtn, btn)

    newBtn.addEventListener('click', (e) => {
      e.stopPropagation()
      menu.classList.toggle('show')
    })

    menu.addEventListener('click', (e) => {
      e.stopPropagation()
    })
  }

  document.addEventListener('DOMContentLoaded', initDropdown)
  document.addEventListener('astro:page-load', initDropdown)

  document.addEventListener(
    'click',
    () => {
      const menu = document.getElementById('dropdownMenu')
      if (menu) menu.classList.remove('show')
    },
    { capture: true },
  )
</script>
